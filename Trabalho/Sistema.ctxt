#BlueJ class context
comment0.target=Sistema
comment0.text=\r\n\ Classe\ que\ guarda\ o\ sistema,\ todas\ as\ entidades\ e\ faturas\ \r\n\r\n
comment1.params=
comment1.target=Sistema()
comment1.text=Constroi\ um\ novo\ sistema\ "vazio"
comment10.params=
comment10.target=java.util.List\ getNatureza()
comment10.text=\r\n\ Metodo\ que\ retorna\ a\ lista\ de\ naturezas\ do\ Sistema\r\n\ \r\n\ @return\ as\ Naturezas\ atuais\ do\ sistema\r\n
comment11.params=n
comment11.target=void\ setNatureza(java.util.List)
comment11.text=\r\n\ Metodo\ que\ altera\ o\ Set\ de\ naturezas\r\n\ \r\n\ @param\ n\ novos\ valores\ das\ naturezas\r\n
comment12.params=
comment12.target=Administrador\ getAdministrador()
comment12.text=\r\n\ Metodo\ que\ retorna\ o\ administrador\ atual\ do\ sistema\r\n\ \r\n\ @return\ o\ administrador\ atual\ do\ sistema\r\n
comment13.params=a
comment13.target=void\ setAdministrador(Administrador)
comment13.text=\r\n\ Metodo\ que\ altera\ o\ administrador\r\n\ \r\n\ @param\ a\ Novos\ valores\ do\ administrador\r\n
comment14.params=
comment14.target=Sistema\ clone()
comment14.text=\r\n\ Metodo\ que\ faz\ uma\ copia\ do\ sitema\r\n\ \r\n\ @return\ uma\ copia\ do\ Sistema\r\n
comment15.params=
comment15.target=java.lang.String\ toString()
comment15.text=\r\n\ Metodo\ que\ retorna\ todo\ o\ sistema\ numa\ String\r\n\ \r\n\ \ @return\ String\ do\ sistema\r\n
comment16.params=o
comment16.target=boolean\ equals(java.lang.Object)
comment16.text=\r\n\ Metodo\ que\ compara\ se\ dois\ sistemas\ sao\ iguais\r\n\ \r\n\ @param\ o\ Object\ que\ ira\ ser\ comparado\ com\ o\ sistema\r\n\ \r\n\ @return\ um\ boolean\ que\ corresponde\ a\ igualdade\ entre\ os\ dois\ sistemas\r\n
comment17.params=n
comment17.target=void\ adicionaNatureza(Natureza)
comment17.text=\r\n\ Metodo\ que\ adiciona\ uma\ Natureza\ ao\ Sistema\r\n\ \r\n\ @param\ n\ Natureza\ que\ ira\ ser\ adicionada\ ao\ sistema\r\n
comment18.params=conta
comment18.target=boolean\ existeNIF(int)
comment18.text=\r\n\ Metodo\ que\ verifica\ se\ existe\ alguma\ entidade\ com\ um\ certo\ NIF\r\n\ \r\n\ @param\ conta\ Identificador\ da\ entidade\ que\ ir\u00E1\ ser\ procurada\r\n\ \r\n\ @return\ um\ boolean\ que\ corresponde\ a\ existencia\ de\ um\ NIF\ no\ sistema\r\n
comment19.params=c
comment19.target=void\ adicionaIndividuo(Individuos)
comment19.text=\r\n\ Metodo\ que\ adiciona\ um\ Individuo\ ao\ Sistema\r\n\ \r\n\ @param\ c\ Individuo\ que\ ira\ ser\ adicionada\ ao\ sistema\r\n
comment2.params=m\ f\ info\ n\ a
comment2.target=Sistema(java.util.Map,\ java.util.Map,\ java.util.Map,\ java.util.List,\ Administrador)
comment2.text=Constroi\ um\ novo\ sistema\ com\ as\ variaveis\ dos\ argumentos
comment20.params=c\ d
comment20.target=void\ adicionaEmpresas(Empresas,\ DistritosInterior)
comment20.text=\r\n\ Metodo\ que\ adiciona\ uma\ Empresa\ ao\ Sistema\r\n\ \r\n\ @param\ c\ Empresa\ que\ ira\ ser\ adicionada\ ao\ sistema\r\n\ \r\n\ @param\ d\ Lista\ de\ distritos\ \r\n
comment21.params=f
comment21.target=void\ adicionaFatura(Fatura)
comment21.text=\r\n\ Metodo\ que\ adiciona\ uma\ Fatura\ ao\ Sistema\r\n\ \r\n\ @param\ f\ Fatura\ que\ sera\ adicionada\ ao\ sistema\r\n
comment22.params=conta\ addN
comment22.target=void\ addAgregado(int,\ int)
comment22.text=\r\n\ Metodo\ que\ adiciona\ um\ agregado\ familiar\r\n\ \r\n\ @param\ conta\ NIF\ que\ se\ pretende\ adicionar\ um\ agregado\ familiar\r\n\ \r\n\ @param\ addN\ NIF\ que\ se\ pretende\ adicionar\ um\ agregado\ familiar\r\n
comment23.params=conta\ passe
comment23.target=boolean\ validaAcesso(int,\ java.lang.String)
comment23.text=\r\n\ Metodo\ que\ verifica\ se\ um\ utilizador\ consegue\ ter\ acesso\ aos\ dados\r\n\ \r\n\ @param\ Id\ Identificador\ da\ entidade\ que\ ira\ tentar\ ter\ acesso\ aos\ dados\r\n\ \r\n\ @param\ passe\ Palavra\ chave\ do\ utilizador\ com\ NIF\ Id\r\n\ \r\n\ @return\ um\ boolean\ que\ corresponde\ se\ a\ entidade\ conseguiu\ entrar\ no\ sistema\r\n
comment24.params=conta
comment24.target=java.util.Set\ listaFaturasEmpresas(int)
comment24.text=\r\n\ Metodo\ que\ retorna\ a\ lista\ de\ faturas\ de\ uma\ empresa\r\n\ \r\n\ @param\ Id\ Identificador\ da\ empresa\r\n\ \r\n\ @return\ um\ Set\ de\ faturas\ de\ uma\ determinada\ Empresa\r\n
comment25.params=conta
comment25.target=java.util.Set\ listaFaturasContribuintes(int)
comment25.text=\r\n\ Metodo\ que\ retorna\ a\ lista\ de\ faturas\ de\ um\ contribuinte\ \r\n\ \r\n\ @param\ Id\ Identificador\ do\ contribuinte\r\n\ \r\n\ @return\ um\ Set\ de\ faturas\ de\ um\ determinado\ Individuo\r\n
comment26.params=conta
comment26.target=boolean\ existeEmpresa(int)
comment26.text=\r\n\ Metodo\ que\ verifica\ se\ existe\ alguma\ Empresa\ no\ sistema\r\n\ \r\n\ @param\ Id\ Identificador\ da\ empresa\ que\ ira\ ser\ procurada\ no\ sitema\r\n\ \r\n\ @return\ um\ boolean\ que\ corresponde\ a\ existencia\ da\ empresa\ no\ sistema\r\n
comment27.params=conta
comment27.target=boolean\ existeIndividuo(int)
comment27.text=\r\n\ Metodo\ que\ verifica\ se\ existe\ algum\ individuo\ no\ sistema\ com\ um\ determinado\ identificador\r\n\ \r\n\ @param\ conta\ Identificador\ do\ individuo\ que\ ira\ ser\ procurada\ no\ sitema\r\n\ \r\n\ @return\ um\ boolean\ que\ corresponde\ a\ existencia\ do\ individuo\ no\ sistema\r\n
comment28.params=Id
comment28.target=boolean\ existeFaturaId(java.lang.String)
comment28.text=\r\n\ Metodo\ que\ verifica\ se\ existe\ alguma\ Fatura\ no\ sistema\ com\ um\ determinado\ identificador\r\n\ \r\n\ @param\ Id\ Identificador\ da\ fatura\ que\ ira\ ser\ procurada\ no\ sitema\r\n\ \r\n\ @return\ um\ boolean\ que\ corresponde\ a\ existencia\ da\ fatura\ no\ sistema\r\n
comment29.params=id\ nif
comment29.target=Fatura\ getFatura(java.lang.String,\ java.lang.Integer)
comment29.text=\r\n\ Metodo\ que\ retorna\ uma\ Fatura\ \r\n\ \r\n\ @param\ id\ Identificador\ da\ fatura\ que\ se\ pretende\ retornar\r\n\ \r\n\ @param\ nif\ Fatura\ esta\ associadda\ a\ este\ nif\r\n\ \r\n\ @return\ uma\ Fatura\r\n
comment3.params=s
comment3.target=Sistema(Sistema)
comment3.text=Constroi\ um\ novo\ sistema
comment30.params=id\ e
comment30.target=Fatura\ getFatura(java.lang.String,\ Empresas)
comment30.text=\r\n\ Metodo\ que\ retorna\ uma\ Fatura\ \r\n\ \r\n\ @param\ id\ Identificador\ da\ fatura\ que\ se\ pretende\ retornar\r\n\ \r\n\ @param\ e\ Empresa\ que\ contem\ a\ fatura\ que\ se\ pretende\ retornar\ \r\n\ \r\n\ @return\ uma\ Fatura\r\n
comment31.params=nif
comment31.target=java.util.Set\ getFaturasEmpresas(int)
comment31.text=\r\n\ Metodo\ que\ retorna\ um\ Set\ de\ Faturas\ de\ uma\ empresa\ \r\n\ \r\n\ @param\ nif\ empresa\ que\ se\ pretende\ retornar\ o\ Set\ de\ faturas\r\n\ \r\n\ @return\ Set\ de\ Faturas\r\n
comment32.params=s
comment32.target=Natureza\ getAtividade(java.lang.String)
comment32.text=\r\n\ Metodo\ que\ retorna\ uma\ natureza\ dado\ uma\ string\r\n\ \r\n\ @param\ s\ Tipo\ da\ natureza\ que\ se\ pretende\ retornar\r\n\ \r\n\ @return\ uma\ Natureza\r\n
comment33.params=s\ n\ nif
comment33.target=void\ validaFatura(java.lang.String,\ Natureza,\ int)
comment33.text=\r\n\ Metodo\ que\ um\ dado\ contribuinte\ escolhe\ qual\ a\ natureza\ da\ fatura\r\n\ \r\n\ @param\ s\ Lista\ das\ Naturezas\ em\ que\ se\ pretende\ alterar\ para\ apenas\ uma\r\n\ \r\n\ @param\ x\ Natureza\ que\ sera\ a\ escolhida\ pelo\ contribuinte\ \r\n
comment34.params=s\ n\ nif
comment34.target=void\ alteraNatureza(java.lang.String,\ Natureza,\ int)
comment34.text=\r\n\ Metodo\ que\ altera\ uma\ natureza\ de\ uma\ fatura\ que\ ja\ foi\ escolhida\ qual\ a\ sua\ natureza\r\n\ \r\n\ @param\ s\ Natureza\ que\ vai\ ser\ alterada\r\n\ \r\n\ @param\ Fatura\ que\ vai\ ser\ alterada\r\n
comment35.params=id\ nif\ n
comment35.target=void\ removeNaturezaFatura(java.lang.String,\ int,\ Natureza)
comment35.text=\ \r\n\ Metodo\ que\ remove\ uma\ Natureza\ e\ uma\ Fatura\r\n\ \r\n\ @param\ id\ Id\ da\ Fatura\ que\ se\ pretende\ remover\ a\ Fatura\r\n\ \r\n\ @param\ nif\ NIF\ do\ Individuo\ que\ contem\ a\ fatura\r\n\ \r\n\ @param\ n\ Natureza\ que\ se\ pretende\ remover\r\n
comment36.params=t\ conta
comment36.target=double\ bonus(double,\ int)
comment36.text=\ \r\n\ Metodo\ que\ retorna\ o\ total\ deduzido\r\n\ \r\n\ @param\ t\ Double\ com\ o\ total\ deduzido\ sem\ os\ bonus\ da\ das\ Familias\ numerosas\ e\ das\ Empresas\ do\ interior\r\n\ \r\n\ @param\ conta\ NIF\ do\ Individuo\ que\ esta\ a\ ser\ calculado\ o\ valor\ total\ deduzido\r\n\ \r\n\ @return\ o\ HashCode\ de\ um\ Individuo\r\n
comment37.params=conta\ begin\ end
comment37.target=double\ valorTotalEmpresasTempo(int,\ java.time.LocalDate,\ java.time.LocalDate)
comment37.text=\r\n\ Metodo\ que\ calcula\ o\ valor\ total\ de\ uma\ empresa\ num\ determinado\ intervalo\ de\ tempo\r\n\ \r\n\ @param\ conta\ Identificador\ da\ empresa\ que\ se\ pretende\ calcular\ o\ valor\ total\r\n\ \r\n\ @param\ begin\ Todas\ as\ faturas\ tem\ que\ ser\ posteriores\ a\ esta\ data\r\n\ \r\n\ @param\ end\ Todas\ as\ faturas\ tem\ que\ ser\ anteriores\ a\ esta\ data\r\n\ \r\n\ @return\ um\ double\ com\ o\ valor\ total\ de\ uma\ empresa\ num\ determinado\ intervalo\ de\ tempo\r\n
comment38.params=conta\ begin\ end
comment38.target=double\ valorTotalDeduzidoEmpresasTempo(int,\ java.time.LocalDate,\ java.time.LocalDate)
comment38.text=\r\n\ Metodo\ que\ calcula\ o\ valor\ total\ de\ uma\ empresa\ num\ determinado\ intervalo\ de\ tempo\r\n\ \r\n\ @param\ conta\ Identificador\ da\ empresa\ que\ se\ pretende\ calcular\ o\ valor\ total\r\n\ \r\n\ @param\ begin\ Todas\ as\ faturas\ tem\ que\ ser\ posteriores\ a\ esta\ data\r\n\ \r\n\ @param\ end\ Todas\ as\ faturas\ tem\ que\ ser\ anteriores\ a\ esta\ data\r\n\ \r\n\ @return\ um\ double\ com\ o\ valor\ total\ de\ uma\ empresa\ num\ determinado\ intervalo\ de\ tempo\r\n
comment39.params=conta
comment39.target=double\ valorTotalEmpresa(int)
comment39.text=\r\n\ Metodo\ que\ calcula\ o\ valor\ total\ de\ uma\ empresa\ de\ sempre\r\n\ \r\n\ @param\ conta\ Identificador\ da\ empresa\ que\ se\ pretende\ calcular\ o\ valor\ total\ das\ faturas\ que\ passou\ de\ sempre\r\n\ \r\n\ @return\ um\ double\ com\ o\ valor\ total\ da\ empresa\r\n
comment4.params=
comment4.target=java.util.Map\ getSistema()
comment4.text=\r\n\ Metodo\ que\ retorna\ o\ sistema\ das\ faturas\ dos\ individuos\r\n\ \r\n\ @return\ as\ Faturas\ dos\ Individuos\ do\ sistema\r\n
comment40.params=conta\ begin\ end
comment40.target=double\ valorTotalTempo(int,\ java.time.LocalDate,\ java.time.LocalDate)
comment40.text=\r\n\ Metodo\ que\ calcula\ o\ valor\ total\ de\ um\ contribuinte\ num\ determinado\ espa\u00E7o\ de\ tempo\ \r\n\ \r\n\ @param\ conta\ Identificador\ da\ um\ contribuinte\ que\ se\ pretende\ ordenar\ as\ faturas\r\n\ \r\n\ @param\ begin\ Todas\ as\ faturas\ tem\ que\ ser\ posteriores\ a\ esta\ data\r\n\ \r\n\ @param\ end\ Todas\ as\ faturas\ tem\ que\ ser\ anteriores\ a\ esta\ data\r\n\ \r\n\ @return\ um\ double\ com\ valor\ total\ num\ determinado\ espa\u00E7o\ de\ tempo\r\n
comment41.params=conta
comment41.target=double\ valorTotal(int)
comment41.text=\r\n\ Metodo\ que\ calcula\ o\ valor\ total\ de\ todas\ as\ faturas\ de\ uma\ identidade\r\n\ \r\n\ @param\ conta\ Identificador\ que\ se\ pretende\ calcular\ o\ valor\ total\r\n\ \r\n\ @return\ double\ com\ o\ valor\ total\ de\ uma\ entidade\ \ \r\n
comment42.params=conta\ begin\ end
comment42.target=double\ valorTotalDeduzidoTempo(int,\ java.time.LocalDate,\ java.time.LocalDate)
comment42.text=\r\n\ Metodo\ que\ calcula\ o\ valor\ total\ deduzido\ num\ certo\ intervalo\ de\ tempo\r\n\ \r\n\ @param\ conta\ Identificador\ de\ uma\ entidade\ que\ se\ pretende\ deduzir\r\n\ \r\n\ @param\ begin\ Todas\ as\ faturas\ tem\ que\ ser\ posteriores\ a\ esta\ data\r\n\ \r\n\ @param\ end\ Todas\ as\ faturas\ tem\ que\ ser\ anteriores\ a\ esta\ data\r\n\ \r\n\ @return\ um\ double\ com\ o\ valor\ que\ vai\ ser\ deduzido\ num\ intervalo\ de\ tempo\r\n
comment43.params=conta
comment43.target=double\ valorTotalFam(int)
comment43.text=\r\n\ Metodo\ que\ calcula\ o\ valor\ total\ da\ familia\ \r\n\ \r\n\ @param\ conta\ Identificador\ do\ contribuinte\ que\ se\ pretende\ calcular\ o\ valor\ total\ do\ agregado\ familiar\ \r\n\ \r\n\ @return\ um\ double\ com\ o\ valor\ total\ do\ agregado\ familiar\r\n
comment44.params=conta\ begin\ end
comment44.target=double\ valorTotalDeduzidoFam(int,\ java.time.LocalDate,\ java.time.LocalDate)
comment44.text=\ \r\n\ Metodo\ que\ calcula\ o\ valor\ total\ deduzido\ da\ familia\ num\ intervalo\ de\ tempo\r\n\ \r\n\ @param\ conta\ NIF\ do\ individuo\ que\ se\ pretende\ calcular\ o\ valor\ total\ deduzido\ pela\ familia\r\n\ \r\n\ @param\ begin\ Todas\ as\ faturas\ tem\ que\ ser\ posteriores\ a\ esta\ data\r\n\ \r\n\ @param\ end\ Todas\ as\ faturas\ tem\ que\ ser\ anteriores\ a\ esta\ data\r\n\ \r\n\ @return\ o\ valor\ total\ deduzido\ pelo\ agregado\ familiar\ de\ um\ Individuo\r\n
comment45.params=conta
comment45.target=double\ custoTotalIndividuo(int)
comment45.text=\r\n\ Metodo\ que\ o\ custo\ total\ de\ um\ individuo\r\n\ \r\n\ @param\ conta\ NIF\ do\ individuo\ que\ se\ pretende\ calcular\ quanto\ gastou\r\n\ \r\n\ @return\ um\ double\ com\ o\ valor\ total\r\n
comment46.params=conta
comment46.target=double\ custoTotalEmpresa(int)
comment46.text=\r\n\ Metodo\ que\ o\ custo\ total\ de\ uma\ empresa\r\n\ \r\n\ @param\ conta\ NIF\ da\ empresa\ que\ se\ pretende\ calcular\ quanto\ gastou\r\n\ \r\n\ @return\ um\ double\ com\ o\ valor\ total\r\n
comment47.params=conta
comment47.target=java.util.Set\ ordenaValor(int)
comment47.text=\r\n\ Metodo\ que\ ordena\ por\ valor\ as\ faturas\ de\ uma\ empresa\r\n\ \r\n\ @param\ conta\ Identificador\ da\ empresa\ que\ se\ pretende\ ordenar\ as\ faturas\r\n\ \r\n\ @return\ uma\ Lista\ de\ faturas\ ordenadas\ por\ valor\r\n
comment48.params=conta
comment48.target=java.util.Set\ ordenaData(int)
comment48.text=\r\n\ Metodo\ que\ ordena\ por\ data\ de\ emissao\ as\ fauras\ de\ uma\ empresas\r\n\ \r\n\ @param\ conta\ Identificador\ da\ empresa\ que\ se\ pretende\ ordenar\ as\ faturas\r\n\ \r\n\ @return\ uma\ Lista\ de\ faturas\ ordenadas\ por\ data\r\n
comment49.params=conta\ begin\ end
comment49.target=java.util.Set\ ordenaContribuinte(int,\ java.time.LocalDate,\ java.time.LocalDate)
comment49.text=\r\n\ Metodo\ que\ ordena\ por\ contribuinte\ as\ faturas\ de\ uma\ empresa\ num\ determinado\ intervalo\ de\ tempo\r\n\ \r\n\ @param\ conta\ Identificador\ da\ empresa\ que\ se\ pretende\ ordenar\ as\ faturas\r\n\ \r\n\ @param\ begin\ Todas\ as\ faturas\ tem\ que\ ser\ posteriores\ a\ esta\ data\r\n\ \r\n\ @param\ end\ Todas\ as\ faturas\ tem\ que\ ser\ anteriores\ a\ esta\ data\r\n\ \r\n\ @return\ uma\ Lista\ de\ faturas\ ordenadas\ por\ contribuinte\r\n
comment5.params=m
comment5.target=void\ SetSistema(java.util.Map)
comment5.text=\r\n\ Metodo\ que\ altera\ o\ Set\ de\ faturas\ dos\ individuos\r\n\ \r\n\ @param\ m\ O\ set\ das\ faturas\ dos\ individuos\ serao\ alterados\ para\ estes\ valores\ \r\n
comment50.params=conta
comment50.target=java.util.Set\ ordenaContribuinteValor(int)
comment50.text=\r\n\ Metodo\ que\ dada\ um\ NIF\ de\ uma\ empresa\ ordena\ as\ faturas\ por\ contribuinte\ e\ no\ caso\ de\ serem\ do\ mesmo\ contribuinte\ ordena\ por\ valor\ \r\n\ \r\n\ @param\ conta\ Identificador\ da\ empresa\ que\ se\ pretende\ ordenar\ as\ faturas\r\n\ \r\n\ @return\ um\ Sistema\r\n
comment51.params=
comment51.target=java.util.Set\ top10Contribuintes()
comment51.text=\r\n\ Metodo\ que\ calcula\ os\ 10\ contribuintes\ que\ masi\ gastaram\ em\ todo\ o\ sistema\r\n\ \r\n\ @return\ um\ ArrayList\ com\ a\ identificacao\ dos\ 10\ contribuintes\ que\ mais\ gastaram\r\n
comment52.params=x
comment52.target=java.util.Set\ topXEmpresas(int)
comment52.text=\r\n\ Metodo\ que\ calcula\ o\ top\ X\ das\ Empresas\ com\ mais\ valor\r\n\ \r\n\ @param\ x\ Quantas\ empresas\ vao\ estar\ no\ top\r\n\ \r\n\ @return\ Set\ com\ o\ top\ X\ empresas\r\n
comment53.params=s
comment53.target=double\ topXEmpresasDeducao(java.util.Set)
comment53.text=\r\n\ Metodo\ que\ calcula\ o\ top\ X\ das\ Empresas\ que\ mais\ deduziram\r\n\ \r\n\ @param\ s\ Lista\ das\ empresas\ que\ estao\ no\ top\r\n\ \r\n\ @return\ double\ com\ o\ total\ deduzido\r\n
comment54.params=NIF
comment54.target=java.util.Set\ faturaPorValidar(int)
comment54.text=\r\n\ Metodo\ que\ retorna\ o\ Id\ das\ faturas\ por\ validar\ de\ um\ individuo\r\n\ \r\n\ @param\ NIF\ nif\ do\ individuo\ que\ se\ pretende\ conhecer\ as\ faturas\ por\ validas\r\n\ \r\n\ @return\ Set\ com\ as\ faturas\ por\ validar\r\n
comment55.params=nomeFicheiro
comment55.target=void\ guardaEstado(java.lang.String)
comment55.text=\r\n\ Metodo\ que\ guarda\ num\ ficheiro\ um\ Sistema\ que\ contem\ todas\ as\ faturas,\ Contribuintes\ e\ Empresas\r\n\ \r\n\ @param\ nomeFichiro\ Ficheio\ que\ serao\ guardados\ os\ dados\ do\ sistema\r\n
comment56.params=nomeFicheiro
comment56.target=Sistema\ carregaEstado(java.lang.String)
comment56.text=\r\n\ Metodo\ que\ carrega\ de\ um\ ficheiro\ um\ Sistema\ com\ todas\ as\ faturas,\ Contribuintes\ e\ Empresas\ \r\n\ \r\n\ @param\ nomeFicheiro\ Ficheiro\ em\ que\ estao\ guardadas\ as\ informa\u00E7\u00F5es\ sobre\ o\ sistema\r\n\ \r\n\ @return\ um\ Sistema\r\n
comment6.params=
comment6.target=java.util.Map\ getEmpFaturas()
comment6.text=\r\n\ Metodo\ que\ retorna\ o\ Set\ de\ faturas\ das\ empresas\r\n\ \r\n\ @return\ o\ Set\ de\ faturas\ das\ Empresas\ \r\n
comment7.params=m
comment7.target=void\ setEmpFaturas(java.util.Map)
comment7.text=\r\n\ Metodo\ que\ altera\ os\ Set\ das\ faturas\ das\ empresas\r\n\ \r\n\ @param\ m\ o\ Set\ das\ faturas\ das\ empresas\ serao\ alteradas\ para\ estes\ valores\r\n
comment8.params=
comment8.target=java.util.Map\ getInfo()
comment8.text=\r\n\ Metodo\ que\ retorna\ um\ Map\ sobre\ a\ informa\u00E7\u00E3o\ das\ entidades\ do\ sistema\r\n\ \r\n\ @return\ as\ informa\u00E7\u00F5es\ sobre\ as\ Entidades\r\n
comment9.params=e
comment9.target=void\ setInfo(java.util.Map)
comment9.text=\r\n\ Metodo\ que\ altera\ as\ entidades\ do\ sistema\r\n\ \r\n\ @param\ e\ Novos\ entidades\ do\ sistema\r\n
numComments=57

#BlueJ class context
comment0.target=Fatura
comment1.params=
comment1.target=Fatura()
comment1.text=Contrutoi\ uma\ fatura\ vazia
comment10.params=
comment10.target=java.lang.String\ getDesignacao()
comment10.text=\n\ Metodo\ que\ devolve\ a\ designa\u00E7\u00E3o\ da\ fatura\n\ \n\ @return\ A\ desigan\u00E7ao\ da\ fatura\n
comment11.params=s
comment11.target=void\ setDesignacao(java.lang.String)
comment11.text=\n\ Metodo\ que\ altera\ a\ designa\u00E7\u00E3o\ da\ fatura\n\ \n\ @param\ s\ Novo\ valor\ da\ designa\u00E7\u00E3o\ da\ fatura\n
comment12.params=
comment12.target=java.lang.String\ getDescricao()
comment12.text=\n\ Metodo\ que\ devolve\ a\ descri\u00E7\u00E3o\ de\ uma\ fatura\n\ \n\ @return\ A\ descri\u00E7ao\ da\ fatura\n
comment13.params=s
comment13.target=void\ setDescricao(java.lang.String)
comment13.text=\n\ Metodo\ que\ altera\ a\ descri\u00E7\u00E3o\ de\ uma\ fatura\n\ \n\ @param\ s\ Novo\ valor\ da\ descri\u00E7\u00E3o\n
comment14.params=
comment14.target=java.time.LocalDate\ getData()
comment14.text=\n\ Metodo\ que\ devolve\ a\ data\ da\ fatura\n\ \n\ @return\ A\ data\ de\ lan\u00E7amento\ do\ sistema\n
comment15.params=d
comment15.target=void\ setData(java.time.LocalDate)
comment15.text=\n\ Metodo\ que\ altera\ a\ data\ de\ uma\ fatura\n\ \n\ @param\ d\ Novo\ valor\ da\ data\ da\ fatura\n
comment16.params=
comment16.target=java.util.Set\ getNatureza()
comment16.text=\n\ Metodo\ que\ retorna\ a\ natureza\ da\ fatura\n\ \n\ @return\ A\ lista\ de\ Naturezas\ que\ a\ fatura\ pertence\n
comment17.params=nat
comment17.target=void\ setNatureza(java.util.Set)
comment17.text=\n\ Metodo\ que\ altera\ a\ natureza\ da\ fatura\n\ \n\ @param\ nat\ Novo\ valor\ da\ natureza\ da\ fatura\n
comment18.params=
comment18.target=int\ getValor()
comment18.text=\n\ Metodo\ que\ devolve\ o\ valor\ da\ fatura\n\ \n\ @return\ O\ valor\ da\ fatura\n
comment19.params=valor
comment19.target=void\ setValor(int)
comment19.text=\n\ Metodo\ que\ altera\ o\ valor\ de\ uma\ fatura\n\ \n\ @param\ valor\ Novo\ valor\ da\ fatura\n
comment2.params=f
comment2.target=Fatura(Fatura)
comment2.text=Construtoi\ uma\ nova\ fatura
comment20.params=
comment20.target=java.util.List\ getHistorico()
comment20.text=\n\ Metodo\ que\ retorna\ o\ historico\ da\ fatura\n\ \n\ @return\ O\ historico\ da\ fatura\n
comment21.params=his
comment21.target=void\ setHistorico(java.util.List)
comment21.text=\n\ Metodo\ que\ altera\ o\ historico\ da\ fatura\n\ \n\ @param\ his\ Novo\ valor\ do\ historico\ da\ fatura\n
comment22.params=
comment22.target=Fatura\ clone()
comment22.text=\n\ Metodo\ que\ retorna\ uma\ copia\ da\ fatura\n\ \n\ @return\ A\ copia\ de\ uma\ Fatura\n
comment23.params=o
comment23.target=boolean\ equals(java.lang.Object)
comment23.text=\n\ Metodo\ que\ testa\ se\ uma\ fatura\ \u00E9\ igual\ a\ um\ objeto\n\ \n\ @param\ o\ Objeto\ a\ comparar\ com\ a\ fatura\n\ \n\ @return\ true\ ou\ false\ se\ um\ objeto\ for\ igual\ a\ uma\ fatura\n
comment24.params=
comment24.target=java.lang.String\ toString()
comment24.text=\n\ Metodo\ que\ transforma\ uma\ fatura\ em\ uma\ string\n\ \n\ @return\ Uma\ string\ de\ uma\ Fatura\n
comment25.params=
comment25.target=int\ hashCode()
comment25.text=\ \n\ Metodo\ que\ da\ o\ hashCode\ de\ uma\ Fatura\n\ \n\ @return\ Inteiro\ com\ o\ hashCode\ de\ uma\ Fatura\n
comment26.params=n
comment26.target=void\ escolheNatureza(Natureza)
comment26.text=\n\ Metodo\ que\ escolhe\ a\ natureza\ de\ uma\ fatura\n\ \n\ @param\ n\ Natureza\ da\ fatura\ a\ escolher\n
comment27.params=n
comment27.target=void\ adicionaNatureza(Natureza)
comment27.text=\ Metodo\ que\ adiciona\ uma\ natureza\ a\ uma\ Fatura\n\ \n\ @param\ n\ Natureza\ que\ vai\ ser\ adicionada\ a\ Fatura\n
comment28.params=n
comment28.target=void\ alteraNatureza(Natureza)
comment28.text=\n\ Metodo\ para\ adicionar\ uma\ natureza\ a\ uma\ fatura\n\ \n\ @param\ n\ Natureza\ a\ adicionar\n
comment29.params=n
comment29.target=void\ removeNatureza(Natureza)
comment29.text=\n\ Metodo\ que\ remove\ uma\ natureza\ da\ fatura\n\ \n\ @param\ n\ Natureza\ a\ remover\n
comment3.params=id\ emit\ cli\ desi\ desc\ d\ nat\ valor\ his
comment3.target=Fatura(java.lang.String,\ int,\ int,\ java.lang.String,\ java.lang.String,\ java.time.LocalDate,\ java.util.Set,\ int,\ java.util.List)
comment3.text=Construtor\ parameterizado
comment30.params=f1\ f2
comment30.target=int\ compare(Fatura,\ Fatura)
comment30.text=\n\ Metodo\ que\ compara\ duas\ faturas\n\ \n\ @param\ f1\ Fatura\ a\ comparar\n\ \n\ @param\ f2\ Fatura\ a\ comparar\n\ \n\ @return\ Um\ inteiro\ que\ indica\ a\ diferen\u00E7a\ de\ valor\ entre\ duas\ faturas\n
comment31.params=f
comment31.target=int\ compareTo(Fatura)
comment31.text=\n\ Metodo\ que\ compara\ duas\ faturas\n\ \n\ @param\ f\ Fatura\ a\ comparar\n\ \n\ @return\ Um\ inteiro\ que\ indica\ a\ diferen\u00E7a\ de\ valor\ entre\ duas\ faturas\n
comment32.params=f1\ f2
comment32.target=int\ compareData(Fatura,\ Fatura)
comment32.text=\n\ Comparator\ de\ faturas\ em\ rela\u00E7\u00E3o\ \u00E0\ sua\ data\n\ \n\ @param\ f1\ Fatura\ 1\n\ \n\ @param\ f2\ Fatura\ 2\n\ \n\ @return\ Um\ inteiro\ que\ indica\ a\ diferen\u00E7a\ da\ data\ entre\ duas\ faturas\n
comment33.params=f
comment33.target=int\ compareToData(Fatura)
comment33.text=\n\ Metodo\ que\ compara\ duas\ faturas\ pela\ data\n\ \n\ @param\ f\ Fatura\ a\ comparar\n\ \n\ @return\ Um\ inteiro\ que\ indica\ a\ diferen\u00E7a\ da\ data\ entre\ duas\ faturas\n
comment34.params=f1\ f2
comment34.target=int\ compareNIF(Fatura,\ Fatura)
comment34.text=\n\ Metodo\ que\ compara\ duas\ faturas\ tendo\ como\ rela\u00E7\u00E3o\ o\ nif\ do\ cliente\n\ \n\ @param\ f1\ Fatura\ 1\n\ \n\ @param\ f2\ Fatura\ 2\n\ \n\ @return\ Um\ inteiro\ qual\ o\ que\ tem\ o\ NIF\ maior\n
comment35.params=f
comment35.target=int\ compareToNIF(Fatura)
comment35.text=\n\ Metodo\ que\ compara\ duas\ faturas\ pelo\ nif\ cliente\n\ \n\ @param\ f\ Fatura\ a\ comparar\n\ \n\ @return\ Um\ inteiro\ que\ indica\ qual\ a\ faura\ com\ NIF\ maior\n
comment36.params=f1\ f2
comment36.target=int\ compareNIFValor(Fatura,\ Fatura)
comment36.text=\n\ Metodo\ que\ compara\ duas\ faturas\ pelo\ nif\ do\ cliente\ e\ caso\ tenham\ o\ mesmo\ nif\ compara\ pelo\ valor\n\ \n\ @param\ f1\ Fatura\ 1\n\ \n\ @param\ f2\ Fatura\ 2\n\ \n\ @return\ Um\ inteiro\ que\ indica\ qual\ a\ faura\ com\ NIF\ maior\ e\ o\ valor\n
comment37.params=f
comment37.target=int\ compareToNIFValor(Fatura)
comment37.text=\n\ Metodo\ que\ compara\ duas\ faturas\ pelo\ nif\ do\ cliente\ e\ caso\ tenham\ o\ mesmo\ nif\ compara\ pelo\ valor\n\ \n\ @param\ f1\ Fatura\ 1\n\ \n\ @param\ f2\ Fatura\ 2\n\ \n\ @return\ Um\ inteiro\ que\ indica\ qual\ a\ faura\ com\ NIF\ maior\ e\ o\ valor\n
comment38.params=n\ f\ e\ i
comment38.target=double\ valorDeduzido(Natureza,\ Fatura,\ double,\ double)
comment38.text=\n\ Metodo\ que\ deduz\ o\ valor\ a\ deduzir\ de\ uma\ fatura\n\ \n\ @param\ n\ Natureza\ da\ fatura\n\ \n\ @param\ f\ Fatura\ da\ deduzir\n\ \n\ @param\ e\ Valor\ dedutivo\ do\ emitente\n\ \n\ @param\ i\ Valor\ dedutivo\ do\ cliente\n\ \n\ @return\ Um\ double\ com\ o\ valor\ deduzido\ de\ uma\ Fatura\n
comment39.params=e\ i\ n
comment39.target=double\ dedTotal(double,\ double,\ Natureza)
comment39.text=\n\ Metodo\ que\ calcula\ o\ valor\ a\ deduzir\ de\ uma\ fatura\n\ \n\ @param\ e\ Valor\ dedutivo\ do\ emitente\n\ \n\ @param\ i\ Valor\ dedutivo\ do\ cliente\n\ \n\ @param\ n\ Natureza\ da\ fatura\n\ \n\ @return\ Um\ double\ com\ o\ valor\ total\ deduzido\ de\ uma\ Fatura\n
comment4.params=
comment4.target=java.lang.String\ getId()
comment4.text=\n\ Metodo\ que\ devolve\ o\ id\ da\ fatura\n\ \n\ @return\ O\ id\ da\ Fatura\n
comment5.params=id
comment5.target=void\ setId(java.lang.String)
comment5.text=\n\ Metodo\ que\ altera\ o\ id\ da\ fatura\n\ \n\ @param\ id\ Novo\ valor\ do\ id\ da\ fatura\n
comment6.params=
comment6.target=int\ getEmitente()
comment6.text=\n\ Metodo\ que\ devolve\ o\ nif\ do\ emitente\n\ \n\ @return\ O\ NIF\ do\ emitente\n
comment7.params=x
comment7.target=void\ setEmitente(int)
comment7.text=\n\ Metodo\ que\ altera\ o\ nif\ do\ emitente\ da\ fatura\n\ \n\ @param\ x\ Novo\ valor\ do\ emitente\ da\ fatura\n
comment8.params=
comment8.target=int\ getCliente()
comment8.text=\n\ Metodo\ que\ devolve\ o\ nif\ do\ cliente\n\ \n\ @return\ O\ NIF\ do\ cliente\n
comment9.params=x
comment9.target=void\ setCliente(int)
comment9.text=\n\ Metodo\ que\ altera\ o\ nif\ do\ cliente\n\ \n\ @param\ x\ Novo\ valor\ do\ nif\ do\ cliente\n
numComments=40
